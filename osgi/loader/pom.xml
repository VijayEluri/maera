<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.maera</groupId>
        <artifactId>maera-osgi</artifactId>
        <version>0.1-SNAPSHOT</version>
    </parent>

    <artifactId>maera-osgi-loader</artifactId>

    <name>Maera :: OSGi :: Loader</name>
    <description>
        An extension to Maera that provides a loader that loads plugins into OSGi
    </description>

    <properties>
        <!-- This should use ${project.build.directory} instead of target, but Maven < 2.0.9 fails to interpolate. -->
        <frameworkBundleDirectory>target/framework-bundles</frameworkBundleDirectory>
        <!-- DEBUG<global.jvm.opts>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005</global.jvm.opts>-->
        <jvm.opts1>-Ddummy1=1</jvm.opts1>
        <!--NPE's if you leave these blank -->
        <jvm.opts2>-Ddummy2=2</jvm.opts2>
        <jmeter.version>2.3.4</jmeter.version>
        <jmeter.home>${project.build.directory}/jakarta-jmeter-${jmeter.version}/</jmeter.home>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-framework-bundles</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.springframework</groupId>
                                    <artifactId>spring</artifactId>
                                    <version>${springVersion}</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.springframework.osgi</groupId>
                                    <artifactId>spring-osgi-annotation</artifactId>
                                    <version>${springDmVersion}</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.springframework.osgi</groupId>
                                    <artifactId>spring-osgi-core</artifactId>
                                    <version>${springDmVersion}</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.springframework.osgi</groupId>
                                    <artifactId>spring-osgi-extender</artifactId>
                                    <version>${springDmVersion}</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.springframework.osgi</groupId>
                                    <artifactId>spring-osgi-io</artifactId>
                                    <version>${springDmVersion}</version>
                                </artifactItem>
                                <!--  The following below was causing OSGi dependency isses after the
                                      fork to Maera.  We assume that Atlassian included this to support their
                                      own web mechanisms, since most Atlassian products allow plugins to add
                                      web views via the Velocity Template Language.
                                <artifactItem>
                                    <groupId>com.atlassian.bundles</groupId>
                                    <artifactId>velocity</artifactId>
                                    <version>1.6.2-1</version>
                                </artifactItem> -->
                            </artifactItems>
                            <outputDirectory>${frameworkBundleDirectory}</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-internal-framework-bundles</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${frameworkBundleDirectory}</outputDirectory>
                            <includeArtifactIds>maera-osgi-bridge,maera-osgi-spring-extender</includeArtifactIds>
                        </configuration>
                    </execution>
                    <execution>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
                            <includeArtifactIds>maera-test-simpletest</includeArtifactIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <finalName>osgi</finalName>
                    <descriptors>
                        <descriptor>src/main/assembly/framework-bundles.xml</descriptor>
                    </descriptors>
                    <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>create-framework-bundles</id>
                        <!--
                            so that it happens just after the unit tests ran successfuly
                            it should be changes to pre-package when maven 2.1 is out
                        -->
                        <phase>process-resources</phase>
                        <goals>
                            <goal>attached</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/performance/**</exclude>
                    </excludes>
                    <!-- Necessary due to a permgen memory leak restarting Felix in Sun's 64bit server VM -->
                    <argLine>-XX:PermSize=64m -XX:MaxPermSize=256m</argLine>
                    <!--argLine>-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/home/mrdon/dev/tmp</argLine-->
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.maera</groupId>
            <artifactId>maera-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.maera</groupId>
            <artifactId>maera-osgi-spring-extender</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.maera</groupId>
            <artifactId>maera-osgi-events</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.maera</groupId>
            <artifactId>maera-osgi-bridge</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>biz.aQute</groupId>
            <artifactId>bndlib</artifactId>
            <version>0.0.255</version>
        </dependency>
        <!-- Required by dom4J at runtime (used by the ScanDescriptorForHostClassesStage implementation): -->
        <dependency>
            <groupId>jaxen</groupId>
            <artifactId>jaxen</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${springVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${springVersion}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${springVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.main</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.shell</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.shell</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.shell.tui</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.bundlerepository</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.twdata.pkgscanner</groupId>
            <artifactId>package-scanner</artifactId>
            <version>0.9.4</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>org.maera</groupId>
            <artifactId>maera-test-utilities</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.maera</groupId>
            <artifactId>maera-test-simpletest</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.maera</groupId>
            <artifactId>maera-webfragment</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.maera</groupId>
            <artifactId>maera-servlet</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- This tests the ability of Spring DM to access xerces due to lame service finding algorithms in JAXP -->
        <dependency>
            <groupId>xerces</groupId>
            <artifactId>xercesImpl</artifactId>
            <version>2.9.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
</project>
